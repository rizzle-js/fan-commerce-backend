name: Main Event Dispatcher

on:
  push:
    branches: [main]
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]
    paths-ignore:
      - '.github/workflows/**'

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      shared: ${{ steps.filter.outputs.shared }}
      rest-api: ${{ steps.filter.outputs.rest-api }}
      admin-api: ${{ steps.filter.outputs.admin-api }}
      any: ${{ steps.filter.outputs.any }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            shared: &shared
              - 'build.gradle.kts'
              - 'gradle.properties'
              - 'settings.gradle.kts'
              - 'common/**'
              - 'internal-config/**'
              - 'context/**'
              - 'external-service/**'
            md-api: &md-api
              - 'application-md-api/**'
            admin-api: &admin-api
              - 'application-admin-api/**'
            any:
              - *shared
              - *md-api
              - *admin-api
  call-shared-ci-action:
    name: Call Shared CI Action
    needs: [changes]
    if: ${{ needs.changes.outputs.any == 'true' }}
    uses: ./.github/workflows/action-ci.yml
    with:
      appName: shared
      buildArgs: :common:test :context:test :context:integration-test :external-service:test :external-service:integration-test :internal-config:test
      shouldUploadArtifacts: none
      shouldUploadImage: false

  call-md-api-ci-action:
    name: Call MD Api CI Action
    needs: [changes]
    if: ${{ needs.changes.outputs.shared == 'true' || needs.changes.outputs.md-api == 'true' }}
    uses: ./.github/workflows/action-ci.yml
    with:
      appName: application-md-api
      buildArgs: :application-md-api:test :application-md-api:integration-test :application-md-api:api-docs-test :application-md-api:packageReference
      useJib: true
      # jdkVersion: 11 # default is 17
      shouldUploadArtifacts: reference # can be multiple value with space sperator. options) package, openapi, reference
      # packageGlobPath: build/libs/app.jar
      # packageUploadDestination: 'dev-mcp-app-kor-bucket/broker-github-artifacts/${{ github.run_number }}/''
#      openapiGlobPath: rest-api/build/api-spec/openapi3.yaml
#      openapiUploadDestination: dev-melon-fan-platform-kor-bucket/swagger/melon-fan-lounge
      referenceGlobPath: application-md-api/build/docs/reference.tgz
      referenceUploadDestination: dev-melon-fan-platform-kor-bucket/reference/melon-fan-md-api
#      referenceFontPath: src/docs/asciidoc/resources/fonts/*
      shouldUploadImage: ${{ github.event_name == 'push' }}
      imageRegistry: asia-northeast3-docker.pkg.dev
      imageRepository: dev-melon-fan-platform-project/fan-platform/melon-fan-md-api
      imageTag:  BUILD-${{ github.run_number }}
    secrets:
      gcpWorkloadIdentityProvider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcpServiceAccount: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  call-admin-api-ci-action:
    name: Call AdminApi CI Action
    needs: [changes]
    if: ${{ needs.changes.outputs.shared == 'true' || needs.changes.outputs.admin-api == 'true' }}
    uses: ./.github/workflows/action-ci.yml
    with:
      appName: application-admin-api
      buildArgs: :application-admin-api:test :application-admin-api:integration-test :application-admin-api:api-docs-test :application-admin-api:packageReference #test integration-test openapi3 bootJar packageReference
      useJib: true
      # jdkVersion: 11 # default is 17
      shouldUploadArtifacts: reference # can be multiple value with space sperator. options) package, openapi, reference
      # packageGlobPath: build/libs/app.jar
      # packageUploadDestination: 'dev-mcp-app-kor-bucket/broker-github-artifacts/${{ github.run_number }}/''
#      openapiGlobPath: admin-api/build/api-spec/openapi3.yaml
#      openapiUploadDestination: dev-melon-fan-platform-kor-bucket/swagger/melon-fan-lounge
      referenceGlobPath: application-admin-api/build/docs/reference.tgz
      referenceUploadDestination: dev-melon-fan-platform-kor-bucket/reference/melon-fan-md-admin-api
      # referenceFontPath: src/docs/asciidoc/resources/fonts/*
      shouldUploadImage: ${{ github.event_name == 'push' }}
      imageRegistry: asia-northeast3-docker.pkg.dev
      imageRepository: dev-melon-fan-platform-project/fan-platform/melon-fan-md-admin-api
      imageTag:  BUILD-${{ github.run_number }}
    secrets:
      gcpWorkloadIdentityProvider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcpServiceAccount: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  call-md-api-gitops-action:
    name: Call MD Api GitOps Action
    needs: [changes, call-shared-ci-action, call-md-api-ci-action]
    if: ${{ github.event_name == 'push' && (needs.changes.outputs.shared == 'true' || needs.changes.outputs.md-api == 'true') }}
    uses: ./.github/workflows/action-gitops.yml
    with:
      targetRepo: kakaoent/melon-fan-platform-manifests
      gitOpsName: melon-fan-md-api
      gitOpsTargetPath: k8s/gke/melon-fan-md-api/overlays/sandbox
      imageRepository: asia-northeast3-docker.pkg.dev/dev-melon-fan-platform-project/fan-platform/melon-fan-md-api
      appTagName: BUILD-${{ github.run_number }}
      appTagType: IMAGE
    secrets:
      botPAT: ${{ secrets.PAT_GITHUB_ACTION_BOT }}

  call-admin-api-gitops-action:
    name: Call AdminApi GitOps Action
    needs: [changes, call-shared-ci-action, call-admin-api-ci-action]
    if: ${{ github.event_name == 'push' && (needs.changes.outputs.shared == 'true' || needs.changes.outputs.admin-api == 'true') }}
    uses: ./.github/workflows/action-gitops.yml
    with:
      targetRepo: kakaoent/melon-fan-platform-manifests
      gitOpsName: melon-fan-md-admin-api
      gitOpsTargetPath: k8s/gke/melon-fan-md-admin-api/overlays/sandbox
      imageRepository: asia-northeast3-docker.pkg.dev/dev-melon-fan-platform-project/fan-platform/melon-fan-md-admin-api
      appTagName: BUILD-${{ github.run_number }}
      appTagType: IMAGE
    secrets:
      botPAT: ${{ secrets.PAT_GITHUB_ACTION_BOT }}

  call-md-api-ref-update-action:
    name: Call MD Api Reference Update Action
    needs: [changes, call-shared-ci-action, call-md-api-ci-action]
    if: ${{ github.event_name == 'push' && (needs.changes.outputs.shared == 'true' || needs.changes.outputs.md-api == 'true') }}
    uses: ./.github/workflows/action-ref-update.yml
    with:
      targetRepo: kakaoent/melon-fan-md-docs
      refName: md
      targetPath: ./snippets/
      refUploadDestination: dev-melon-fan-platform-kor-bucket/reference/melon-fan-md-api/application-md-api/build/docs/reference.tgz
    secrets:
      botPAT: ${{ secrets.PAT_GITHUB_ACTION_BOT }}
      gcpWorkloadIdentityProvider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcpServiceAccount: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  call-admin-api-ref-update-action:
    name: Call AdminApi Reference Update Action
    needs: [changes, call-shared-ci-action, call-admin-api-ci-action]
    if: ${{ github.event_name == 'push' && (needs.changes.outputs.shared == 'true' || needs.changes.outputs.admin-api == 'true') }}
    uses: ./.github/workflows/action-ref-update.yml
    with:
      targetRepo: kakaoent/melon-fan-md-docs
      refName: admin
      targetPath: ./snippets/
      refUploadDestination: dev-melon-fan-platform-kor-bucket/reference/melon-fan-md-admin-api/application-admin-api/build/docs/reference.tgz
    secrets:
      botPAT: ${{ secrets.PAT_GITHUB_ACTION_BOT }}
      gcpWorkloadIdentityProvider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      gcpServiceAccount: ${{ secrets.GCP_SERVICE_ACCOUNT }}